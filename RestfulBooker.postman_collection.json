{
	"info": {
		"_postman_id": "c527efeb-5bd1-4eb8-b489-a65105adb84f",
		"name": "Restful Booker",
		"description": "## Overview\nThe Restful Booker API is a sample API based on hotel bookings. The API contains endpoints to demonstrate CRUD operations. The source code can be obtained from https://github.com/mwinteringham/restful-booker\n\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Get Auth Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.globals.set(\"my_booker_token\", pm.response.json().token);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"password123\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						},
						"description": "Get auth token"
					},
					"response": []
				}
			]
		},
		{
			"name": "Bookings",
			"item": [
				{
					"name": "Get Bookings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var status_code = 200;",
									"pm.test(\"Status code is \" + status_code, function () {",
									"    pm.response.to.have.status(status_code);",
									"});",
									"",
									"const response = pm.response.json();",
									"console.log(response);",
									"console.log(response.length);",
									"console.log(response['response.lenth']);",
									"",
									"pm.test(\"Verify Bookings List is Displayed in Response \" , () => console.log(response));",
									"",
									"pm.test(\"Total No of Bookings Displayed  : \" +response.length , function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length).to.eql(response.length);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/booking",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking"
							]
						},
						"description": "Get a list of all bookings"
					},
					"response": []
				},
				{
					"name": "Create new Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*var jsonData = pm.response.json();",
									"",
									"pm.globals.set(\"bookingID\", pm.response.json().bookingid);",
									"",
									"pm.test(\"Check firstname of new Booking\", function () {",
									"    pm.expect(jsonData.booking.firstname).to.eql(\"Sally\");",
									"}); */",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.environment.set(\"firstname\", \"Sam\");",
									"pm.environment.set(\"lastname\", \"Jacob\");",
									"pm.environment.set(\"totalprice\", \"215\");",
									"pm.environment.set(\"depositpaid\", \"true\");",
									"pm.environment.set(\"additionalneeds\", \"Breakfast\");",
									"pm.environment.set(\"checkin\", \"2020-03-06\");",
									"pm.environment.set(\"checkout\", \"2020-03-09\");",
									"",
									"var jsonData = pm.response.json();",
									" ",
									"pm.globals.set(\"bookingID\", pm.response.json().bookingid);",
									" ",
									"pm.test(\"Verify that firstname in the booking is correct \", function () {",
									"pm.expect(jsonData.booking.firstname).to.eql(pm.variables.get(\"firstname\"));",
									"});",
									"pm.test(\"Verify that lastname in the booking is correct \", function () {",
									"    pm.expect(jsonData.booking.lastname).to.eql(pm.variables.get(\"lastname\"));",
									"});",
									"pm.test(\"Verify that totalprice in the booking is correct \", function () {",
									"    pm.expect(jsonData.booking.totalprice).to.eql(parseInt(pm.variables.get(\"totalprice\")));",
									"})",
									"pm.test(\"Verify that depositpaid in the booking is correct \", function () {",
									"    pm.expect(jsonData.booking.depositpaid).to.eql(true);",
									"});",
									"pm.test(\"Verify that additionalneeds in the booking is correct \", function () {",
									"    pm.expect(jsonData.booking.additionalneeds).to.eql(pm.variables.get(\"additionalneeds\"));",
									"});",
									"pm.test(\"Verify that checkin date in the booking is correct \", function () {",
									"    pm.expect(jsonData.booking.bookingdates.checkin).to.eql(pm.variables.get(\"checkin\"));",
									"});",
									"pm.test(\"Verify that checkout in the booking is correct \", function () {",
									"    pm.expect(jsonData.booking.bookingdates.checkout).to.eql(pm.variables.get(\"checkout\"));",
									"});",
									"const response = pm.response.json();",
									"console.log(response);",
									"",
									"pm.test(\"Verify that Booking is not empty \",(console.log(response)) != 0);",
									"",
									"var url = pm.environment.get(\"url\") + \"/booking/\" +  pm.globals.get(\"bookingID\");",
									"",
									"const getRequest = {",
									"        url: url,",
									"        method: 'GET'",
									"};",
									"pm.test(\"Check if New Booking is added in the Database \", pm.expect(getRequest));",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"Sam\",\r\n    \"lastname\" : \"Jacob\",\r\n    \"totalprice\" : 215,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2020-03-06\",\r\n        \"checkout\" : \"2020-03-09\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/booking",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Bookings Added",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var status_code = 200;",
									"pm.test(\"Status code is \" + status_code, function () {",
									"    pm.response.to.have.status(status_code);",
									"});",
									"",
									"const response = pm.response.json();",
									"console.log(response);",
									"console.log(response.length);",
									"console.log(response['response.lenth']);",
									"",
									"pm.test(\"Verify Bookings List is Displayed in Response \" , () => console.log(response));",
									"",
									"pm.test(\"Total No of Bookings Displayed after adding new booking : \" +response.length , function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length).to.eql(response.length);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/booking",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking"
							]
						},
						"description": "Get a list of all bookings"
					},
					"response": []
				},
				{
					"name": "Get Booking by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.globals.get(\"bookingID\", pm.response.json().bookingid);\r",
									"pm.test(\"Verify that the booking is not empty\", function () {\r",
									"    pm.expect(jsonData.booking).to.not.eql(\"\");\r",
									"});\r",
									" \r",
									"pm.test(\"Check the contents of Booking Data are not empty\", function () {\r",
									"    pm.expect(pm.response.text()).to.not.include(null);\r",
									"});\r",
									" \r",
									"pm.test(\"Status code is 200\", () => pm.expect(responseCode.code).to.equal(200) );\r",
									"\r",
									"const response = pm.response.json();\r",
									"console.log(response);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/booking/{{bookingID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"firstname\", \"Jonny\");\r",
									"pm.environment.set(\"lastname\", \"Brown\");\r",
									"pm.environment.set(\"totalprice\", \"111\");\r",
									"pm.environment.set(\"depositpaid\", \"false\");\r",
									"pm.environment.set(\"additionalneeds\", \"Breakfast and dinner\");\r",
									"pm.environment.set(\"checkin\", \"2020-03-05\");\r",
									"pm.environment.set(\"checkout\", \"2020-03-07\");\r",
									"const response = pm.response.json();\r",
									"console.log(response);\r",
									"\r",
									" \r",
									"pm.test(\"Verify that firstname in the booking is updated \", function () {\r",
									"pm.expect(pm.response.text()).to.include(\"Jonny\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that lastname in the booking is updated \", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Brown\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that totalprice in the booking is updated \", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"111\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that depositpaid in the booking is updated \", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"false\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that additionalneeds in the booking is updated \", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Breakfast and dinner\");\r",
									"});\r",
									"pm.test(\"Verify that checkin in the booking is updated \", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"2020-03-05\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that checkout in the booking is updated \", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"2020-03-07\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Cookie",
								"value": "token={{my_booker_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"Jonny\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : false,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2020-03-05\",\r\n        \"checkout\" : \"2020-03-07\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast and dinner\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/booking/{{bookingID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Booking (partial)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.environment.set(\"firstname\", \"Victor\");",
									"pm.environment.set(\"lastname\", \"Halson\");",
									"pm.environment.set(\"additionalneeds\", \"Breakfast\");",
									"",
									"const response = pm.response.json();",
									"console.log(response);",
									"",
									"pm.test(\"Verify that firstname in the booking is updated \", function () {",
									"pm.expect(pm.response.text()).to.include(\"Victor\");",
									"});",
									"",
									"pm.test(\"Verify that lastname in the booking is updated \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Halson\");",
									"});",
									"",
									"pm.test(\"Verify that additionalneeds in the booking is updated \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Breakfast\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"type": "text",
								"value": "token={{my_booker_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"Victor\",\r\n    \"lastname\" : \"Halson\",\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/booking/{{bookingID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var status_code = 201;",
									"pm.test(\"Status code is \" + status_code, function () {",
									"    pm.response.to.have.status(status_code);",
									"});",
									"",
									"var url = pm.environment.get(\"url\") + \"/booking/\" +  pm.globals.get(\"bookingID\");",
									"",
									"const getRequest = {",
									"        url: url,",
									"        method: 'GET'",
									"};",
									"",
									"pm.sendRequest(getRequest, function (err, res) {",
									"    if (err) { ",
									"        console.log(err);",
									"    }",
									"    ",
									"    console.log(res);",
									"    ",
									"    pm.test('Response should be Not Found', function () {",
									"        pm.expect(res.status).to.include(\"Not Found\");",
									"    });",
									"    ",
									"    pm.test(\"Response code 404\", function() {",
									"        pm.expect(res.code).to.equal(404);",
									"    })",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Cookie",
								"value": "token={{my_booker_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/booking/{{bookingID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Bookings to verify booking is deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var status_code = 200;",
									"pm.test(\"Status code is \" + status_code, function () {",
									"    pm.response.to.have.status(status_code);",
									"});",
									"",
									"const response = pm.response.json();",
									"console.log(response);",
									"console.log(response.length);",
									"console.log(response['response.lenth']);",
									"",
									"pm.test(\"Verify Bookings List is Displayed in Response \" , () => console.log(response));",
									"",
									"pm.test(\"Total No of Bookings Displayed after deleting booking : \" +response.length , function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length).to.eql(response.length);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/booking",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking"
							]
						},
						"description": "Get a list of all bookings"
					},
					"response": []
				}
			],
			"description": "All bookings requests "
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}